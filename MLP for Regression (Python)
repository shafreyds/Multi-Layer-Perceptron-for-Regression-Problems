from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error
import numpy as np
import requests

# Define the URL to the online dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data"

# Load the online dataset into a NumPy array
response = requests.get(url)
data = response.content.decode('utf-8')
data = data.strip().split('\n')
data = [list(map(float, row.strip().split())) for row in data]
data = np.array(data)

# Split the dataset into input and output variables
X = data[:, :-1]
y = data[:, -1]

# Define the MLP model with four hidden layers of 100, 50, 25, and 10 neurons respectively
mlp = MLPRegressor(hidden_layer_sizes=(100, 50, 25, 10), max_iter=1000, random_state=42)

# Train the model on the entire dataset
mlp.fit(X, y)

# Use the trained model to predict the output for a new input
new_input = np.array([[0.03237, 0.0, 2.18, 0.0, 0.458, 6.998, 45.8, 6.0622, 3.0, 222.0, 18.7, 394.63, 2.94]])
new_output = mlp.predict(new_input)
print("New Output:", new_output)
